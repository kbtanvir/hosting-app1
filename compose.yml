services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      - "MINIO_ROOT_USER=user"
      - "MINIO_ROOT_PASSWORD=password"
    command: server /data --console-address :9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    # networks:
    #   - webnet

  createbucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 user password;
      /usr/bin/mc mb s3/static/;
      /usr/bin/mc anonymous set download s3/static;
      "
  db:
    container_name: db
    build: ./db
    # image: postgres:13-alpine
    restart: always
    env_file:
      - db/.env
    volumes:
      - pijmo_hosting_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
  
  server:
    build: ./server
    ports:
      - "8080:8080"
    # volumes:
    #   - ./server:/usr/src/app
    env_file:
      - server/.env 
    depends_on:
      - db

  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/hosts:/etc/hosts
      - ./sites/html:/usr/share/nginx/html
    ports:
      - 80:80
    depends_on:
      - minio

  client:
    container_name: todo-app-client
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file:
      - client/.env
    ports:
      - "3000:80"
    # depends_on:
    #   - server

volumes:
  pijmo_hosting_db:
  minio-data:
# networks:
#   webnet:
#     driver: bridge
